---
// Import the global.scss file here so that it is included on
// all pages through the use of the <BaseHead /> component.

// import "@fontsource/plus-jakarta-sans/400.css"
// import "@fontsource/plus-jakarta-sans/500.css"
// import "@fontsource/plus-jakarta-sans/600.css"
// import "@fontsource/plus-jakarta-sans/700.css"

// import "@fontsource/open-sans/400.css"
// import "@fontsource/open-sans/500.css"
// import "@fontsource/open-sans/600.css"
// import "@fontsource/open-sans/700.css"

import '@fontsource/inter/400.css'
import '@fontsource/inter/500.css'
import '@fontsource/inter/600.css'
import '@fontsource/inter/700.css'

//import '../styles/tailwind.css'

import '@styles/global.css'
import '@styles/color-picker.scss'
import '@styles/scrollbar.scss'
import '@styles/collapsible.scss'

import { type ILayoutProps } from '@interfaces/layout-props'
import { SEO } from 'astro-seo'
import { ClientRouter } from 'astro:transitions'
import { APP_NAME, COLOR_BLACK, COLOR_WHITE, HEADER_SEP } from '@/consts'

interface Props extends ILayoutProps {
  isIndexed?: boolean
}

//const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const { title, description, isIndexed = true } = Astro.props

const pageTitle = title ? `${title} ${HEADER_SEP} ${APP_NAME}` : APP_NAME

const pageDescription = description ? description : APP_NAME
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta
  name="theme-color"
  media="(prefers-color-scheme: light)"
  content="white"
/>
<meta
  name="theme-color"
  media="(prefers-color-scheme: dark)"
  content={COLOR_WHITE}
/>
<link rel="icon" href="/favicon.svg" />
<link rel="mask-icon" href="/favicon.svg" color={COLOR_BLACK} />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="manifest" href="/manifest.json" />

<SEO
  title={pageTitle}
  description={pageDescription}
  openGraph={{
    basic: {
      title: pageTitle,
      type: 'website',
      image: new URL('/favicon.svg', Astro.site).href,
    },
  }}
/>

<script is:inline>
  function getTheme() {
    if (
      typeof localStorage !== 'undefined' &&
      localStorage.getItem('edb-theme-v2')
    ) {
      return localStorage.getItem('edb-theme-v2')
    }

    const theme = window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'automatic'

    window.localStorage.setItem('edb-theme-v2', theme)

    return theme
  }

  const theme = getTheme()

  if (theme === 'dark') {
    document.documentElement.classList.add('dark')
  }
</script>

{
  !isIndexed && (
    <>
      <meta name="robots" content="noindex,nofollow" />
      <meta name="googlebot" content="noindex,nofollow" />
    </>
  )
}

<ClientRouter />
